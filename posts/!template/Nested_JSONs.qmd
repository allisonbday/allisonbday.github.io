---
title: "Working with Nested JSONs"
description: "Post description"
author: "Allison Day"
date: "11/6/2022"
categories: [APIs, JSON]
# image: timp.jpg
draft: true
---

```{python}
#| code-fold: true
#| code-summary: "Imports"

# this is code-fold
import pandas as pd
import json

json_raw = "code/json_example.json"
with open(json_raw) as json_data:
    json_example = json.load(json_data)
```

Lets say pulled an API and it gave you this json:
```json
{
    "Total": 1,
    "Page": 1,
    "Products": [
        {
            "ID": 12345,
            "SKU": "Clownfish",
            "Name": "Nemo",
            "Suppliers": [
                {
                    "SupplierID": "67891",
                    "SupplierName": "Little Fish Inc",
                    "Cost": 5.99
                },
                {
                    "SupplierID": "24601",
                    "SupplierName": "Large Pond Co",
                    "Cost": 5.59
                }
            ],
            "PriceTiers": {
                "Public Retail Price": 24.99,
                "Employee Price": 6.0
            }
        }
    ]
}
```

# Basic
```{python}
df = pd.json_normalize(
    json_example, 
    record_path=["Products"],
    errors="ignore",
    )

print(df.to_markdown())
```

# By Suppliers
```{python}
df = pd.json_normalize(
    json_example,
    record_path=["Products", "Suppliers"],
    meta=[
        ["Products"],
    ],
    errors="ignore",
)

print(df.to_markdown())
```

# Get Product Columns
```{python}
df = pd.json_normalize(
    json_example,
    record_path=["Products", "Suppliers"],
    meta=[
        ["Products", "ID"],
        ["Products", "SKU"],
        ["Products", "Name"],
        ["Products", "PriceTiers"], 
    ],
    errors="ignore",
)

print(df.to_markdown())
```

# Include all of the sub dictionary columns too
```{python}
df = pd.json_normalize(
    json_example,
    record_path=["Products", "Suppliers"],
    meta=[
        ["Products", "ID"],
        ["Products", "SKU"],
        ["Products", "Name"],
        ["Products", "PriceTiers", "Public Retail Price"], 
        ["Products", "PriceTiers", "Employee Price"]
    ],
    errors="ignore",
)

print(df.to_markdown())
```